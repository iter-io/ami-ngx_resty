#
# Kernel sysctl configuration file based on RHEL Documentation
# see See sysctl(8) and sysctl.conf(5)
#
# 0 -> DISABLED
# 1 -> ENABLED
#

##                               ##
#  DEFAULT AMAZON LINUX SETTINGS  #
##                               ##

# Controls IP packet forwarding
net.ipv4.ip_forward = 0

# Controls source route verification
net.ipv4.conf.default.rp_filter = 1

# Do not accept source routing
net.ipv4.conf.default.accept_source_route = 0

# Controls the System Request debugging functionality of the kernel
kernel.sysrq = 0

# Controls whether core dumps will append the PID to the core filename
# Use for debugging multi-threaded applications
kernel.core_uses_pid = 1

# Controls the use of TCP syncookies

# Disable netfilter on bridges.
net.bridge.bridge-nf-call-ip6tables = 0
net.bridge.bridge-nf-call-iptables = 0
net.bridge.bridge-nf-call-arptables = 0

# Maxmimum size of a mesage queue (bytes)
kernel.msgmnb = 65536

# Maximum size of a message (bytes)
kernel.msgmax = 65536

# Maximum shared segment size (bytes)
kernel.shmmax = 68719476736

# Maximum number of shared memory segments (pages = 4096 bytes)
kernel.shmall = 4294967296

# Maximize console logging level for kernel printk messages
kernel.printk = 8 4 1 7
kernel.printk_ratelimit_burst = 10
kernel.printk_ratelimit = 5


##                                  ##
#  IMPROVE SYSTEM MEMORY MANAGEMENT  #
##                                  ##

# Confirm hard limit:  ulimit -Hn
# Confirm soft limit:  ulimit -Sn
#
# May require /etc/pam.d/common-session to contain the following line depending
# on distro:
#
#     session required pam_limits.so
#
fs.file-max = 2000000

# Reduce swapping
# RESEARCH vm.dirty_ratio AND vm.dirty_background_ratio
vm.swappiness = 10

# See http://redis.io/topics/admin
vm.overcommit_memory = 1


##                               ##
#  NETWORK SECURITY IMPROVEMENTS  #
##                               ##

# Limit retries during handshake
net.ipv4.tcp_syn_retries = 2
net.ipv4.tcp_synack_retries = 2

# Restrict local port range
net.ipv4.ip_local_port_range = 2000 65535

# Protect Against TCP Time-Wait
net.ipv4.tcp_rfc1337 = 1

# Decrease time value for tcp_fin_timeout connection
net.ipv4.tcp_fin_timeout = 10

# Decrease time value for connections to keep alive
net.ipv4.tcp_keepalive_time = 300
net.ipv4.tcp_keepalive_probes = 5
net.ipv4.tcp_keepalive_intvl = 15

# Increase available tcp-time-wait buckets pool size to prevent simple DOS attacks
net.ipv4.tcp_max_tw_buckets = 1440000
net.ipv4.tcp_tw_recycle = 1
net.ipv4.tcp_tw_reuse = 1


##                          ##
#  TUNE NETWORK PERFORMANCE  #
##                          ##

net.ipv4.tcp_syncookies = 1
net.ipv4.tcp_tw_recycle = 1

# Disabled to avoid the overhead of checking to see if it can scale
net.ipv4.tcp_window_scaling = 0

# Speeds up connections and gives attackers less info
net.ipv4.tcp_timestamps = 0

net.ipv4.tcp_sack = 0
net.ipv4.tcp_fack = 0

# Increase the maximum total buffer-space allocatable (pages = 4096 bytes)
net.ipv4.tcp_mem = 12582912 12582912 12582912
net.ipv4.udp_mem = 65536 131072 262144

# Increase socket receive buffer space
net.ipv4.tcp_rmem = 10240 87380 12582912

# Increase socket write buffer space
net.ipv4.tcp_wmem = 10240 87380 12582912

net.ipv4.tcp_tw_reuse = 1
net.ipv4.tcp_max_orphans = 3276800

# By default, TCP saves various connection metrics in the route cache when the
# connection closes, so that connections established in the near future can
# use these to set initial conditions. Usually, this increases overall
# performance, but may sometimes cause performance degradation. If set, TCP
# will not cache metrics on closing connections.

net.ipv4.tcp_no_metrics_save = 1

# Increase number of incoming connections to max
net.core.somaxconn = 65536

# Increase number of incoming connections backlog
net.core.netdev_max_backlog = 65536

# Increase the maximum amount of option memory buffers
net.core.optmem_max = 25165824


##                ##
#  KERNEL OPTIONS  #
##                ##

# Auto-reboot linux 10 seconds after a kernel panic
kernel.panic = 10
